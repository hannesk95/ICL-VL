project: CRC100K
mode: three_shot
classification_type: binary

data:
  train_csv: "data/CRC100K/binary/CRC100K_dataset.csv"
  test_csv: "data/CRC100K/binary/CRC100K_test_dataset.csv"
  save_path: ./results/${project}/${classification_type}/${mode}/
  num_shots: 3
  batch_size: 1
  randomize_few_shot: false
  seed: 40
  num_test_images: 40
  randomize_test_images: true
  test_seed: 40
  labels_path: "data/CRC100K/binary/labels.json"

model:
  model_name: gemini-2.0-flash
  model_kwargs:
    temperature: 0.7
    top_p: 0.95
    max_output_tokens: 1024

user_args:
  prompt_path: "./prompts/CRC100K/binary/few_shot.txt"
  verbose: true
  debug: false

classification:
  type: ${classification_type}
  labels: ["Tumor", "No Tumor"]

retrieval:
  enable: true
  index_path: embeddings/CRC100K_binary_dinov2_224.faiss
  meta_path:  embeddings/CRC100K_binary_dinov2_224.faiss.meta.npy
  model_name: vit_small_patch14_dinov2
  img_size:   224          # ‚Üê must match what you embedded with
  overquery_factor: 5      # (leave default if unsure)